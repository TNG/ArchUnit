<?xml version="1.0" encoding="UTF-8"?>
<FindBugsFilter>
    <Match>
        <Or>
            <!-- Null is not used as a value (return or input) in any method, so we don't need @Nullable and co. -->
            <Bug pattern="NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE"/>
            <!-- We don't use Java serialization, so we don't want to be forced to add serialVersionUuid to fields of enums, etc. -->
            <Bug pattern="SE_BAD_FIELD"/>
            <!-- These patterns cause too many false positives. We return fields in many places, but those are in fact ImmutableSet, etc.-->
            <Bug pattern="EI_EXPOSE_REP"/>
            <Bug pattern="EI_EXPOSE_REP2"/>
        </Or>
    </Match>
    <Match>
        <!-- The respective methods add URLClassLoaders to a set, not URLs. I don't see any equals or hashCode that
             would delegate to URL either, so this seems like a false positive -->
        <Bug pattern="DMI_COLLECTION_OF_URLS"/>
        <Or>
            <Method name="findAllUrlClassLoadersInContext"/>
            <Method name="findUrlClassLoadersInHierarchy"/>
        </Or>
    </Match>
    <Match>
        <!-- False positive on try-with-resources statement with JDK-11?
            Nullcheck of in at line 189 of value previously dereferenced in com.tngtech.archunit.core.domain.Source$Md5sum.read(URI)
            Bug type RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE
            In class com.tngtech.archunit.core.domain.Source$Md5sum
            In method com.tngtech.archunit.core.domain.Source$Md5sum.read(URI)
            Value loaded from in
            Return value of java.net.URL.openStream() of type java.io.InputStream
            At Source.java:[line 189]
            Redundant null check at Source.java:[line 190]
        -->
        <Class name="com.tngtech.archunit.core.domain.Source$Md5sum"/>
        <Method name="read"/>
        <Bug pattern="RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE"/>
    </Match>
    <Match>
        <!-- Null is not used as a value (return or input) in any method, so we don't need @Nullable and co. -->
        <Class name="com.tngtech.archunit.core.importer.SignatureTypeArgumentProcessor"/>
        <Method name="visitClassType"/>
        <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
    </Match>
    <Match>
        <!-- This is a false positive as both of these occurrences are wrapped in a try-with-resources which will ensure the
             resource is properly closed in the end -->
        <Bug pattern="OBL_UNSATISFIED_OBLIGATION"/>
        <Class name="com.tngtech.archunit.library.freeze.ViolationStoreFactory$TextFileBasedViolationStore$FileSyncedProperties"/>
        <Or>
            <Method name="loadRulesFrom"/>
            <Method name="syncFileSystem"/>
        </Or>
    </Match>
    <Match>
        <!-- False positive: Complains some path is null, but the respective line is just using the MultimapBuilder -->
        <Class name="com.tngtech.archunit.library.cycle_detection.rules.CycleArchCondition"/>
        <Method name="targetsOf"/>
        <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"/>
    </Match>
</FindBugsFilter>
