plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0' apply false
    id 'com.github.spotbugs' version '4.7.2' apply false
    id "de.marcphilipp.nexus-publish" version "0.4.0" apply false
    id "com.diffplug.spotless" version "5.14.2" apply false
}

def appAndSourceUrl = 'https://github.com/TNG/ArchUnit'

ext {
    year = "${Calendar.getInstance().get(Calendar.YEAR)}"
    app = [
            name   : 'ArchUnit',
            urls   : [
                    entry : appAndSourceUrl,
                    doc   : appAndSourceUrl,
                    issues: "${appAndSourceUrl}/issues",
                    source: appAndSourceUrl
            ],
            gitRepo: 'git@github.com:TNG/ArchUnit.git',
            license: [
                    name: 'The Apache Software License, Version 2.0',
                    url : 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            ]
    ]
    company = [
            name: 'TNG Technology Consulting GmbH',
            url : 'https://www.tngtech.com/'
    ]

    thirdPartyRelocationPackage = 'com.tngtech.archunit.thirdparty'
    asmRelocationPackage = "${thirdPartyRelocationPackage}.org.objectweb.asm"
    googleRelocationPackage = "${thirdPartyRelocationPackage}.com.google"

    dependency = [
            asm                 : [group: 'org.ow2.asm', name: 'asm', version: '9.2'],
            guava               : [group: 'com.google.guava', name: 'guava', version: '30.1-android'],  // -android is compatible with Java 7.
            addGuava            : { dependencyHandler ->
                                      dependencyHandler(dependency.guava) {
                                          exclude module: 'listenablefuture'
                                          exclude module: 'jsr305'
                                          exclude module: 'checker-compat-qual'
                                          exclude module: 'error_prone_annotations'
                                          exclude module: 'j2objc-annotations'
                                      }
                                  },
            slf4j               : [group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'],
            // log4j 2.13.0 requires Java 8.
            log4j_api           : [group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'],
            log4j_core          : [group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'],
            log4j_slf4j         : [group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.12.1'],

            junit4              : [group: 'junit', name: 'junit', version: '4.13.2'],
            junit5VintageEngine : [group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.7.2'],
            junit5JupiterApi    : [group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'],
            junit5JupiterEngine : [group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.7.2'],
            junitPlatform       : [group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.7.2'],
            junitPlatformCommons: [group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.7.2'],
            junitPlatformEngine : [group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.7.2'],
            hamcrest            : [group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'],
            junit_dataprovider  : [group: 'com.tngtech.java', name: 'junit-dataprovider', version: '1.11.0'],
            mockito             : [group: 'org.mockito', name: 'mockito-core', version: '2.28.2'],  // version 3 requires Java 8.
            assertj             : [group: 'org.assertj', name: 'assertj-core', version: '2.9.1'],   // version 3 requires Java 8.
            assertj_guava       : [group: 'org.assertj', name: 'assertj-guava', version: '2.0.1'],  // version 3 requires Java 8.

            // Dependencies for example projects / tests
            javaxAnnotationApi  : [group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'],
            springBeans         : [group: 'org.springframework', name: 'spring-beans', version: '5.2.13.RELEASE'],  // 5.3.0 requires Java 8.
            jakartaInject       : [group: 'jakarta.inject', name: 'jakarta.inject-api', version: '1.0'],
            jakartaAnnotations  : [group: 'jakarta.annotation', name: 'jakarta.annotation-api', version: '1.3.5'],
            guice               : [group: 'com.google.inject', name: 'guice', version: '4.2.3'],
            // NOTE: The pure javaee-api dependencies are crippled, so to run any test we need to choose a full implementation provider
            geronimoEjb         : [group: 'org.apache.geronimo.specs', name: 'geronimo-ejb_3.1_spec', version: '1.0.2'],
            geronimoJpa         : [group: 'org.apache.geronimo.specs', name: 'geronimo-jpa_2.0_spec', version: '1.1'],
            jodaTime            : [group: 'joda-time', name: 'joda-time', version: '2.10.10'],
            joox                : [group: 'org.jooq', name: 'joox-java-6', version: '1.6.0']
    ]

    postfixedJar = { File jarFile, String postfix ->
        new File(jarFile.parentFile, jarFile.name.replaceAll(/\.jar$/, "-${postfix}.jar"))
    }

    tempJar = { File jarFile -> postfixedJar(jarFile, 'tmp') }

    productionProjects = [
            project(':archunit'),
            project(':archunit-junit'),
            project(':archunit-junit4'),
            project(':archunit-junit5-api'),
            project(':archunit-junit5-engine-api'),
            project(':archunit-junit5-engine'),
            project(':archunit-junit5')]
    releaseProjects = [
            project(':archunit'),
            project(':archunit-junit4'),
            project(':archunit-junit5-api'),
            project(':archunit-junit5-engine-api'),
            project(':archunit-junit5-engine'),
            project(':archunit-junit5')]
    createModuleDescription = { description, proj -> "${description} - Module '${proj.name}'" }

    currentScriptRootOf = { it.buildscript.sourceFile.parentFile }
}

allprojects {
    group = 'com.tngtech.archunit'
    version = '0.21.0-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

description = 'A Java architecture test library, to specify and assert architecture rules in plain Java'

task showJdkVersion {
    println "Configured JDK: ${JavaVersion.current()}"
}

task clean {
    doLast {
        project.buildDir.deleteDir()
    }
}

configure(subprojects.findAll { it.name != 'docs' }) {
    apply plugin: 'java-library'

    description createModuleDescription(rootProject.description, project)

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    javadoc {
        options.addBooleanOption('html5', true)
    }
}

apply from: 'build-steps/build-steps.gradle'
