name: CI

on:
  push:
    branches:
      - main
      - release-*
  pull_request:

env:
  build_java_version: 17

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.build_java_version }}
      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

  testjdk7:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Build JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.build_java_version }}
      - name: Set up Test JDK
        uses: actions/setup-java@v1
        with:
          java-version: 7
      - name: Provide installed JDKs
        uses: actions/github-script@v6
        with:
          script: |
            for ( let envVarName in process.env ) {
              if (/JAVA_HOME_\d.*64/.test(envVarName)) {
                const version = envVarName.match(/JAVA_HOME_(\d+).*64/)[1];
                if (version === "7") {
                  core.exportVariable('test_jdk_path', process.env[envVarName]);
                } else if (version === "${{ env.build_java_version }}") {
                  core.exportVariable('build_jdk_path', process.env[envVarName]);
                }
              }
            }
      - name: Test
        uses: gradle/gradle-build-action@v2
        env:
          JAVA_HOME: ${{ env.build_jdk_path }}
        with:
          arguments: test -PallTests -PtestJavaVersion=7 -Porg.gradle.java.installations.paths=${{ env.test_jdk_path }}

  test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        test_java_version:
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Build JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.build_java_version }}
      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test -PallTests -PtestJavaVersion=${{ matrix.test_java_version }}

  integration-test:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        test_java_version:
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
          - 17
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Build JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.build_java_version }}
      - name: Set up Test JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.test_java_version }}
      - name: Provide installed JDKs
        uses: actions/github-script@v6
        id: provideJdkPaths
        with:
          script: |
            for ( let envVarName in process.env ) {
              if (/JAVA_HOME_\d.*64/.test(envVarName)) {
                const version = envVarName.match(/JAVA_HOME_(\d+).*64/)[1];
                if (version === "${{ matrix.test_java_version }}") {
                  core.exportVariable('test_jdk_path', process.env[envVarName]);
                } else if (version === "${{ env.build_java_version }}") {
                  core.exportVariable('build_jdk_path', process.env[envVarName]);
                }
              }
            }
      - name: Publish to Maven Local
        uses: gradle/gradle-build-action@v2
        env:
          JAVA_HOME: ${{ env.build_jdk_path }}
        with:
          arguments: build -xtest -xspotbugsMain -xjavadoc publishToMavenLocal
      - name: Integration test
        uses: gradle/gradle-build-action@v2
        env:
          JAVA_HOME: ${{ env.build_jdk_path }}
        with:
          arguments: build -xtest -xspotbugsMain -xjavadoc runMavenTest -PtestJavaVersion=${{ matrix.test_java_version }} -Porg.gradle.java.installations.paths=${{ env.test_jdk_path }}
