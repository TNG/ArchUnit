plugins {
    id 'archunit.java-release-conventions'
}

ext.moduleName = 'com.tngtech.archunit.junit5.engineapi'

ext.minimumJavaVersion = JavaVersion.VERSION_1_8

dependencies {
    api dependency.junitPlatformEngine
    implementation project(path: ':archunit')
    dependency.addGuava { dependencyNotation, config -> implementation(dependencyNotation, config) }
    implementation dependency.slf4j
    implementation dependency.junit5JupiterApi

    testImplementation project(path: ':archunit-junit5-api')
    testImplementation project(path: ':archunit', configuration: 'tests')
    testImplementation dependency.assertj
    testImplementation dependency.mockito

    testRuntimeOnly dependency.junit5JupiterEngine
}

compileJava.dependsOn project(':archunit-junit5-api').finishArchive

archUnitTest {
    hasSlowTests = true
}

test {
    useJUnitPlatform() {
        excludeEngines 'archunit'
    }
}

shadowJar {
    exclude 'META-INF/maven/**'

    dependencies {
        exclude(dependency { it.name != dependency.guava })
    }
}

// dependencies to archunit only cover annotations; we can skip those without breaking consumers to keep the dependency slim
def configureDependencies = { deps ->
    deps.children().removeIf{ dep ->
        dep.artifactId.text() != 'junit-platform-engine'
    }
}
this.with project(':archunit-junit').configureJUnitArchive(configureDependencies)
